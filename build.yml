---
- hosts: cubox
  name: PULL THE FILES REQUIRED FOR POST BUILD INSTALL/CONFIG OF FEDORA LAPTOP
  gather_facts: no
  #become: yes

  tasks:
  - name: SYNCHRONIZE LOCAL PACKAGES TO BE INSTALLED FROM MY SFTP SERVER
    synchronize:
      mode: pull
      src: /home/eblaben/fedora_build/
      dest: /tmp/fedora_build/
    register: synchronize_output
    tags:
    - cubox

  - debug: var=synchronize_output

- hosts: localhost
  connection: local
  name: PERFORM POST BUILD INSTALL/CONFIG OF FEDORA LAPTOP
  gather_facts: yes
  become: yes

  vars:
    # Explicitly telling Ansible to use Python3, because of the bug below:
    # https://github.com/ansible/ansible/issues/54855
    ansible_python_interpreter: /usr/bin/python3

    # Get the distro major version so we can install
    fedora_version: "{{ ansible_facts['distribution_major_version'] }}"

    rpmfusion_packages:
    - http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ fedora_version }}.noarch.rpm
    - http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ fedora_version }}.noarch.rpm

# fatal: [localhost]: FAILED! => {"changed": false, "failures": ["No package unrar available.", "No package firefox-wayland available.", "No package vlc available.", "No package clipgrab available.", "No package python2-libselinux available."], "msg": ["Failed to install some of the specified packages"], "rc": 1, "results": []}

    regular_packages:
    - p7zip
    - p7zip-plugins
    - unrar
    - icedtea-web
    - java-openjdk
    - gnome-tweak-tool
    - dconf-editor
    - firefox
    - firefox-wayland
    - chromium
    - vlc
    - vim-enhanced
    # Note: Clipgrab is a YouTube video downloader
    #- clipgrab
    - tigervnc
    #- python2-libselinux
    # Note: libxcrypt-compat required for NixNote2 to launch.  Remove in future?
    #- libxcrypt-compat
    - sshfs
    - terminator
    
    # Packages retrieved from:
    # https://redhat.service-now.com/help?id=kb_article&sysparm_article=KB0000771
    # http://hdn.corp.redhat.com/rhel7-csb-stage/repoview/SpiderOakGroups.html
    # If you want to stay up to date and use the the yum repo, use the repo file:
    # wget https://hdn.corp.redhat.com/rhel7-csb-stage/rhel7-csb-stage.repo /etc/yum.repos.d/
    redhat_mandatory_packages:
      #- SpiderOakGroups
      - /tmp/fedora_build/SpiderOakGroups-7.5.0-1.el7.x86_64.rpm

    # Pull additional openvpn files/packages down and install as per link below
    # https://redhat.service-now.com/help?id=kb_article&sysparm_article=KB0005424
    # https://redhat.service-now.com/help?id=kb_article&sys_id=5e7dc60713972640daa77b304244b0c4
    openvpn_packages:
    - NetworkManager-openvpn
    - NetworkManager-openvpn-gnome

    openvpn_config_packages:
    - /tmp/fedora_build/redhat-internal-cert-install-0.1-9.el7.csb.noarch.rpm
    - /tmp/fedora_build/redhat-internal-NetworkManager-openvpn-profiles-0.1-30.el7.csb.noarch.rpm

    printer_packages:
    - system-config-printer
    #- devassistant
    #- devassistant-gui

    mp3_packages:
    - gstreamer1-plugins-base
    - gstreamer1-plugins-good
    - gstreamer1-plugins-ugly
    - gstreamer1-plugins-bad-free
    - gstreamer1-plugins-bad-free
    - gstreamer1-plugins-bad-freeworld
    - gstreamer1-plugins-bad-free-extras
    - ffmpeg

    # Consider removing this, refer to section on Gnome Shell extensions below in To Do list
    gnome_shell_extensions_packages:
    # Alternate-tab extension not in Fedora 30
    # - gnome-shell-extension-alternate-tab.noarch
    - gnome-shell-extension-apps-menu.noarch
    - gnome-shell-extension-background-logo.noarch
    - gnome-shell-extension-common.noarch
    - gnome-shell-extension-dash-to-dock.noarch
    - gnome-shell-extension-launch-new-instance.noarch
    - gnome-shell-extension-places-menu.noarch
    - gnome-shell-extension-pomodoro.x86_64
    - gnome-shell-extension-user-theme.noarch
    - gnome-shell-extension-window-list.noarch
    
    flash_packages:
    - gnome-shell-extension-apps-menu.noarch
    - gnome-shell-extension-dash-to-dock.noarch
    - flash-plugin
    - alsa-plugins-pulseaudio
    - libcurl 

    powermgmt_packages:
    - tlp
    - tlp-rdw

    powermgmt_services:
    - tlp
    - tlp-sleep

    copr_repos:
    - luminoso/Signal-Desktop
    - taw/joplin

  tasks:

  - debug: var=fedora_version

  - debug: var=ansible_interfaces

  # Set the hostname
  # hostnamectl set-hostname bblasco_fedora
  # Check the hostname (print output of command below)
  # hostnamectl
  - name: SET THE SYSTEM HOSTNAME
    hostname:
      name: bblasco-fedora

  - name: ENABLE RPM FUSION REPO
    #command: 'dnf install -y http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm'
    #command: 'dnf install -y http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ fedora_version }}.noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ fedora_version }}.noarch.rpm'
    dnf:
      name: "{{ rpmfusion_packages }}"
      state: present

  #- name: ENABLE RHEL CSB REPO
     #copy:
     #src: /tmp/fedora_build/rhel7-csb-stage.repo
     #dest: /etc/yum.repos.d/rhel7-csb-stage.repo
     #owner: root
     #group: root
     #mode: '0644'

  - name: PERFORM A SYSTEM UPDATE
    dnf:
      name: "*"
      state: latest
      # Force dnf to check if cache is out of date and redownload
      # if needed. Has an effect only if state is present or
      # latest.
      update_cache: yes

  - name: INSTALL REGULAR PACKAGES
    dnf:
      name: "{{ regular_packages }}"
      state: present

  #- name: INSTALL RED HAT MANDATORY PACKAGES FROM CSB REPO
    #dnf:
      #name: "{{ redhat_mandatory_packages }}"
      #state: present

  - name: INSTALL RED HAT MANDATORY PACKAGES FROM LOCAL RPMs
    dnf:
      name: "{{ redhat_mandatory_packages }}"
      state: present

  # Pull additional openvpn files/packages down and install as per link below
  # https://redhat.service-now.com/help?id=kb_article&sys_id=5e7dc60713972640daa77b304244b0c4
  - name: INSTALL OPENVPN BINARY PACKAGES
    dnf:
      name: "{{ openvpn_packages }}"
      state: present

  - name: INSTALL OPENVPN CONFIGURATION PACKAGES FROM LOCAL RPMs
    dnf:
      name: "{{ openvpn_config_packages }}"
      state: present





  - name: INSTALL PRINTER PACKAGES
    dnf:
      name: "{{ printer_packages }}"
      state: present

  - name: CONFIGURE MELBOURNE PRINTER
    lineinfile:
      path: /etc/cups/client.conf
      create: yes
      regexp: '^ServerName'
      line: 'ServerName cups.mel.redhat.com'
      state: present

  - name: INSTALL POWER MANAGEMENT PACKAGES
    # https://linrunner.de/en/tlp/docs/tlp-linux-advanced-power-management.html
    dnf:
      name: "{{ powermgmt_packages }}"
      state: present
    notify: START POWER MANAGEMENT SERVICES
    tags:
    - power

  # Consider removing this, refer to section on Gnome Shell extensions below in To Do list
  #- name: INSTALL GNOME SHELL EXTENSIONS
  #dnf:
      #name: "{{ gnome_shell_extensions_packages }}"
      #state: present

  - name: INSTALL ADOBE FLASH PACKAGE
    dnf:
      name: http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm
      state: present
    tags:
    - adobe

  - name: INSTALL ADOBE FLASH GPG KEY
    rpm_key:
      key: /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux
    tags:
    - adobe

  - name: INSTALL ADDITIONAL FLASH RELATED PACKAGES
    dnf:
      name: "{{ flash_packages }}"
      state: present
      
  # Bluejeans v1 RPM retrieved from https://redhat.service-now.com/help?id=kb_article&sys_id=d92b36da4f7d470815cf7f75f110c7ef
  # Bluejeans v2 beta RPM retrieved from file.emea.redhat.com/ohaessle/RPMs/signed/test/2019-07-26
  - name: INSTALL BLUEJEANS VIDEOCONFERENCING (BUT CHECK IF THIS RELEASE IS CURRENT FIRST)
    dnf:
      #name: /tmp/fedora_build/bluejeans-1.37.19.x86_64.rpm
      name: /tmp/fedora_build/bluejeans-v2-0.3.0-218.x86_64.rpm
      state: present

  - name: ENABLE COPR REPOS DUE TO LIMITATION OF DNF MODULE
    command: "dnf copr enable -y {{ item }}"
    #command: "dnf copr enable -y luminoso/Signal-Desktop"
    loop: "{{ copr_repos }}"

  # Install Signal Desktop from COPR repo
  # https://copr.fedorainfracloud.org/coprs/luminoso/Signal-Desktop/
  - name: INSTALL SIGNAL DESKTOP FROM COPR REPO
    dnf:
      name: signal-desktop
      #enablerepo: luminoso/Signal-Desktop
      state: present

  # Install Joplin notes from COPR repo
  # Copr repo for joplin owned by taw
  # https://copr.fedorainfracloud.org/coprs/taw/joplin/
  - name: INSTALL JOPLIN NOTES FROM COPR REPO
    dnf:
      name: joplin
      #enablerepo: taw/joplin
      state: present
    tags:
    - joplin

  # Installation of NixNote2 Evernote client
  # https://github.com/robert7/nixnote2
  # https://github.com/robert7/nixnote2/releases/tag/continuous
  - name: INSTALL NIXNOTE2 APPIMAGE FROM GITHUB
    get_url:
      url: https://github.com/robert7/nixnote2/releases/download/continuous/NixNote2-x86_64.AppImage
      dest: /usr/local/bin/NixNote2-x86_64.AppImage
      mode: '0755'
      owner: root
      group: root
  
  - name: COPY NIXNOTE2 SHORTCUT
    copy:
      src: files/nixnote2/nixnote2.desktop
      dest: /home/bblasco/.local/share/applications/nixnote2.desktop
      owner: bblasco
      group: bblasco
      mode: '0664'

  - name: CREATE DIRECTORIES FOR NIXNOTE2 ICON
    file:
      path: "{{ item }}"
      owner: root
      group: root
      mode: '0755'
      state: directory
    loop:
    - /usr/share/nixnote2/
    - /usr/share/nixnote2/images

  - name: COPY NIXNOTE2 ICON
    copy:
      src: files/nixnote2/windowIcon.png
      dest: /usr/share/nixnote2/images/windowIcon.png
      owner: root
      group: root
      mode: '0644'

  - name: CREATE .SSH DIRECTORY
    file:
      path: /home/bblasco/.ssh
      owner: bblasco
      group: bblasco
      mode: '0700'
      state: directory

  - name: COPY SSH CONFIG FILE
    copy:
      src: files/ssh/config
      dest: /home/bblasco/.ssh
      owner: bblasco
      group: bblasco
      mode: '0600'

  - name: COPY WIFI INTERFACE FILES
    copy:
      src: "{{ item }}"
      dest: "/etc/sysconfig/network-scripts/"
      owner: root
      group: root
      mode: '0644'
    with_fileglob:
      - "files/wifi/ifcfg*"
    tags:
    - test

  - name: COPY ENCRYPTED WIFI KEY FILES
    copy:
      decrypt: yes
      src: "{{ item }}"
      dest: "/etc/sysconfig/network-scripts/"
      owner: root
      group: root
      mode: '0600'
    with_fileglob:
      - "files/wifi/keys_encrypted/*"
    tags:
    - test

  handlers:
  - name: START POWER MANAGEMENT SERVICES
    dnf:
      name: "{{ powermgmt_services }}"
      enabled: yes
      state: started


#####################################################################
#
# PREREQUISITES OLD MACHINE
#
# Complete a backup of the user's entire home directory
#
# Get a snapshot of all Firefox and Chrome extensions
#
# Get a snapshot of all Gnome extensions
#
# Backup your FoxyProxy configuration (Firefox/Chrome)
#
# Backup bookmarks and settings using Firefox Sync
#
# Check for new versions of any downloaded packages e.g. bluejeans, vpn clients etc.
#
# Update this playbook with all of the above wherever possible
#
# Check the updated playbook into Git repo
#
# PREREQUISITES NEW BUILD
#
# Install Ansible:
# sudo dnf install ansible python4-dnf
#
# Optional: Add bblasco to sudoers file
# bblasco	localhost=(root)	NOPASSWD: /usr/bin/vagrant
#
# Restore your home directory from the remote source via rsync
#
# USAGE/EXECUTION 
#
# git clone https://github.com/eraser215/fedoralaptop.git
# sudo dnf install ansible
# cd fedoralaptop
# ansible-playbook -i hosts build.yml --ask-become-pass --ask-vault-pass --check 
# ansible-playbook -i hosts build.yml --ask-become-pass --ask-vault-pass
#
# TASKS TO ADD TO THIS PLAYBOOK
#
# Install Gnome extensions
# Note that the command below doesn't appear to show all the extensions I have installed.  Why?
# Because not all extensions can be installed as RPMs using DNF
# It turns out you can sync all your gnome extensions using your google account, as per the instructions here:
# https://askubuntu.com/questions/1135175/how-do-i-automatically-reinstall-gnome-shell-extensions-after-reinstalling-ubunt
# 1. Install the Firefox add-on called "GNOME Shell integration"
# 2. Have it sync your extensions for you...?
# 3. Pray
#
# OR install this extension and follow the instructions:
# https://github.com/oae/gnome-shell-extensions-sync
#
# My gist location is:
# https://gist.github.com/eraser215/251271b1c756e28e4149c2ab63d5838c
# My gist token is:
# fafbb4f71f99a6633ba4bd950573db742b23d885
# This appears to be broken somehow
#
# Current list of Gnome Shell Extensions
# https://extensions.gnome.org/extension/15/alternatetab/
# https://extensions.gnome.org/extension/6/applications-menu/
# https://extensions.gnome.org/extension/779/clipboard-indicator/
# https://extensions.gnome.org/extension/307/dash-to-dock/
# https://extensions.gnome.org/extension/904/disconnect-wifi/
# https://extensions.gnome.org/extension/1036/extensions/
# https://extensions.gnome.org/extension/600/launch-new-instance/
# https://extensions.gnome.org/extension/921/multi-monitors-add-on/
# https://extensions.gnome.org/extension/118/no-topleft-hot-corner/
# https://extensions.gnome.org/extension/8/places-status-indicator/
# https://extensions.gnome.org/extension/19/user-themes/
# https://extensions.gnome.org/extension/602/window-list/
#
# Install Chrome extensions
# - Bluejeans Meeting
# - Bluejeans for Google Calendar
# - FoxyProxy Standard
# - Google Calendar
# - Google Docs Offline
# - Google Keep Chrome Extension
# - Open in Firefox
# - KeePass Tusk
# - uBlock Origin
#
# Install GMail addons for Chrome
# - Trello
# - Others?
#
# Install Firefox extensions
# - Firstly, login and sync.  It might download the extensions for you
# - Auto Tab Discard https://add0n.com/tab-discard.html
# - BitWarden https://bitwarden.com/
# - Facebook Containers https://github.com/mozilla/contain-facebook
# - Firefox Multi Account Containers https://github.com/mozilla/multi-account-containers#readme
# - FoxyProxy Standard https://getfoxyproxy.org/
# - Gnome Shell Integration https://wiki.gnome.org/Projects/GnomeShellIntegrationForChrome
# - KeePass Tusk https://subdavis.com/Tusk
# - Open in Chrome http://add0n.com/open-in.html?from=chrome
# - Tab Mover https://code.guido-berhoerster.org/addons/firefox-addons/tab-mover/
# - Tree Style Tabs http://piro.sakura.ne.jp/xul/_treestyletab.html.en
# - uBlock Origin http://piro.sakura.ne.jp/xul/_treestyletab.html.en
# - Honey https://www.joinhoney.com/
# - KeePass Tusk https://subdavis.com/Tusk
# - Open in Chrome http://add0n.com/open-in.html?from=chrome
# - Tab Mover https://code.guido-berhoerster.org/addons/firefox-addons/tab-mover/
# - Tree Style Tabs http://piro.sakura.ne.jp/xul/_treestyletab.html.en
# - uBlock Origin addons://detail/uBlock0@raymondhill.net
#
# Install cockpit
# dnf install cockpit
# systemctl enable cockpit.socket
# systemctl start cockpit
# then connect to localhost:9090
#
# Restore bookmarks and settings using Firefox Sync
#
# QUESTIONS/UPDATES REQUIRED
#
# N/A
#
# NOTES ON SOME OF THE TASKS COMPLETED
#
# MANUAL TASKS THAT MAY NOT BE POSSIBLE TO AUTOMATE
#
# Configure mouse sensitivity and left handed use
#
# Configure SpiderOak backups
# https://redhat.service-now.com/help?id=kb_article&sys_id=c09f0e372b66b8004c71dc0e59da15ff
# https://redhat.service-now.com/help?id=kb_article&sysparm_article=KB0000771
# http://hdn.corp.redhat.com/rhel7-csb-stage/repoview/SpiderOakGroups.html
#
# Connect to Wifi
# https://redhat.service-now.com/help?id=kb_article&sysparm_article=KB0001616
# or just grab the files for the SSIDs you want from /etc/sysconfig/network-scripts/
# [bblasco@bblasco_fedora cloudfedora30]$ nmcli conn show --order type
# NAME                UUID                                  TYPE      DEVICE
# virbr1              0123f995-617a-40b7-901e-f1b0f584585f  bridge    virbr1
# virbr0              5bbcd81f-9b8c-4477-bd31-4c11888621a7  bridge    virbr0
# enp0s31f6           a892e9f1-390a-3d1d-9029-8cca02a4a981  ethernet  --
# Wired connection 1  b1ca0584-f3a1-42b7-8563-c1d87f830019  ethernet  enp62s0u1u1
# enp62s0u1u1         f1f0533b-9973-3496-ad0e-c143336a96ca  ethernet  --
# vnet0               6a0c1f95-3fbc-4cdb-91ab-c17647883f5f  tun       vnet0
# São Paulo (GRU2)    26d95e8e-bac5-4308-bc01-ea93656fa112  vpn       --
# Beijing (PEK2)      38486930-d56a-4088-bbb5-d8a6a1d236c0  vpn       --
# Singapore (SIN2)    461f8cf8-c8dc-478b-9669-80ca01d04c5b  vpn       --
# Brno (BRQ)          5777c2b4-defc-46f1-9858-2b850d51587c  vpn       --
# Amsterdam (AMS2)    7b487c5c-09c9-4c4c-95b0-e562c4a5ad43  vpn       --
# Brisbane (BNE)      9822534a-1693-4e50-9f61-1560bf0cee17  vpn       --
# Phoenix (PHX2)      c9509a40-caed-46c2-a3ef-706b5a98265f  vpn       --
# Tel Aviv (TLV)      e396fe67-4bb0-426a-850c-e8786fae6cea  vpn       --
# Tokyo (NRT)         ef06e9c8-f787-4419-9790-fd89bcbe70da  vpn       --
# Raleigh (RDU2)      f281b867-85e1-4979-8adf-ad9fac216a7c  vpn       --
# Farnborough (FAB)   f3967fc7-a927-47e2-92fd-a53338d4bb92  vpn       --
# Red Hat Guest       0ccfd13b-5920-4fda-924d-059d0178993c  wifi      --
# WiFi-6FE7           26e5b1fc-3171-4964-be2a-5fc283c1db28  wifi      --
# eraser215           27e8eeb8-46b9-4cc6-8acd-a139711e2fa2  wifi      --
# WiFi-6FE7-5G        3b94cd43-0f68-485b-a220-2d6fb657c54a  wifi      --
# TelstraC083AB       5d30249a-c8a9-44bf-9763-8f087339cf99  wifi      --
# Red Hat             916403a9-1bd7-4386-b1d9-7034396dac40  wifi      wlp4s0
# Yarra               931b30d6-330d-440e-82e0-b7be4c5e731d  wifi      --
# eraser215op6        a8598908-f3d3-45e0-ad29-df92c6ed2558  wifi      --
#
#####################################################################
