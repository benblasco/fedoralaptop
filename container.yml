- hosts: localhost
  connection: local

  name: PERFORM CONFIGURATION OF SYSTEM TO RUN MY CONTAINERS
  gather_facts: no
  become: yes

  vars:
  # Explicitly telling Ansible to use Python3, because of the bug below:
  # https://github.com/ansible/ansible/issues/54855
  - ansible_python_interpreter: /usr/bin/python3
  - exported_container_volumes_basedir: "/var/lib/containers/exported_volumes"

  - jenkins_data_dir: jenkins_data
  - jenkins_docker_certs_dir: jenkins-docker-certs


  tasks:

  - name: Ensure that containers run with the local time zone set
    lineinfile:
      path: /usr/share/containers/containers.conf
      regexp: '^tz'
      insertafter: '^# tz = ""'
      line: tz = "local"
      backup: yes
    tags:
    - podman

  - name: Create directory for persistent storage (exported container volumes)
    file:
      path: "{{ exported_container_volumes_basedir }}"
      owner: root
      group: root
      mode: '0700'
      state: directory
    tags:
    - storage


  - name: Enable firewall ports for Librespot (Spotify Connect Client) MDNS service (UDP port 5353)
    firewalld:
      service: mdns
      permanent: yes
      immediate: yes
      state: enabled
    tags:
    - firewall
    - librespot

  - name: Enable firewall ports for Librespot (Spotify Connect Client) TCP high port 49999
    firewalld:
      port: 49999/tcp
      permanent: yes
      immediate: yes
      state: enabled
    tags:
    - firewall
    - librespot

  - name: Build the Librespot podman container image
    podman_image:
      name: librespot_via_ansible
      path: files/containers/librespot
      build:
        rm: yes
      state: build
      tag: "32"
    register: build_results
    tags:
    - librespot

  - name: Check how my container build went
    debug:
      var: build_results
    tags:
    - librespot

  - name: Start the Librespot container
    containers.podman.podman_container:
      name: librespot
      image: localhost/librespot_via_ansible:32
      state: started
      restart_policy: always
      #rm: yes
      network: host
      device: "/dev/snd"
      memory: 256m
    tags:
    - librespot

  - name: Enable firewall ports for Jenkins
    firewalld:
      port: "{{ item }}"
      permanent: yes
      immediate: yes
      state: enabled
    loop:
      - 18080/tcp
      - 50000/tcp
    tags:
    - firewall
    - jenkins

  - name: Ensure Jenkins volume paths exist (if running as root)
    file:
      path: "{{ item }}"
      state: directory
      owner: bblasco
      group: bblasco
      mode: u=rwx,g=rs,o=rx
    loop:
      - "{{ exported_container_volumes_basedir }}/{{ jenkins_data_dir }}"
      - "{{ exported_container_volumes_basedir }}/{{ jenkins_docker_certs_dir }}"
    tags:
    - jenkins

  - name: Start the Jenkins container
    become: no
    containers.podman.podman_container:
      name: jenkins
      image: jenkinsci/blueocean:latest
      state: started
      restart_policy: always
      #rm: yes
      publish:
        - 18080:8080
        - 50000:50000
        #- 192.168.1.3:18080:8080
        #- 192.168.1.3:50000:50000
      volume:
        - jenkins-data:/var/jenkins_home:Z
        #- jenkins-data:/var/jenkins_home
        - jenkins-docker-certs:/certs/client:ro
        #- "{{ exported_container_volumes_basedir }}/{{ jenkins_data_dir }}:/var/jenkins_home:Z"
        #- "{{ exported_container_volumes_basedir }}/{{ jenkins_data_dir }}:/var/jenkins_home"
        #- "{{ exported_container_volumes_basedir }}/{{ jenkins_docker_certs_dir }}:/certs/client:ro"
      memory: 4g
      memory_swappiness: 0
    register: run_results
    tags:
    - jenkins

  - name: Check how my Jenkins container setup went
    debug:
      var: run_results
    tags:
    - jenkins
