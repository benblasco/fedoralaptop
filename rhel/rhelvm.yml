# Pre-requisite: ansible-galaxy collection install community.libvirt
#
- hosts: localhost
  connection: local

  name: Build a RHEL VM based on the rhel version number
  gather_facts: no
  become: yes

  vars:
  # Explicitly telling Ansible to use Python3, because of the bug below:
  #     # https://github.com/ansible/ansible/issues/54855
  - ansible_python_interpreter: /usr/bin/python3

    vm_imagepath: "/var/lib/libvirt/images"
    vm_sourcepath: "/var/lib/libvirt/images/source"

    os_variant: "rhel8.4"
      #vm_sourceimage: "rhel-8.2-x86_64-kvm.qcow2"
    vm_sourceimage: "rhel-8.4-x86_64-kvm.qcow2"

    sourceimage:
      rhel7.6: "rhel-server-7.6-x86_64-kvm.qcow2"
      rhel7.8: "rhel-server-7.8-x86_64-kvm.qcow2"
      rhel7.9: "rhel-server-7.9-x86_64-kvm.qcow2"
      rhel8.1: "rhel-8.1-x86_64-kvm.qcow2"
      rhel8.2: "rhel-8.2-x86_64-kvm.qcow2"
      rhel8.3: "rhel-8.3-x86_64-kvm.qcow2"
      rhel8.4: "rhel-8.4-x86_64-kvm.qcow2"
      rhel8.5: "rhel-8.5-x86_64-kvm.qcow2"

    vm_hostname: "bblasco84"
    vm_ipaddress: "192.168.3.184/24"

  tasks:

  - name: Create the directory for the VM
    file:
      path: "{{ vm_imagepath }}/{{ vm_hostname }}"
      owner: qemu
      group: qemu
      mode: '0744'
      state: directory

  - name: Copy the cloud-init config files
    template:
      src: "templates/libvirt/{{ item }}.j2"
      dest: "{{ vm_imagepath }}/{{ vm_hostname }}/{{ item }}"
      owner: qemu
      group: qemu
      mode: '0644'
    loop:
      - cloud_init.cfg
      - network_config_static.cfg

  - name: Create the cloud-init configuration ISO image
    command: >
      cloud-localds -v
      --network-config={{ vm_imagepath }}/{{ vm_hostname }}/network_config_static.cfg
      {{ vm_imagepath }}/{{ vm_hostname }}/{{ vm_hostname }}-seed.qcow2
      {{ vm_imagepath }}/{{ vm_hostname }}/cloud_init.cfg

  - name: Copy the machine image
    copy:
      src: "{{ vm_imagepath }}/source/{{ sourceimage['rhel8.4'] }}"
      dest: "{{ vm_imagepath }}/{{ vm_hostname }}/{{ vm_hostname }}.qcow2"
      owner: qemu
      group: qemu
      mode: '0644'
    loop:
      - cloud_init.cfg
      - network_config_static.cfg


  - name: Create the VM definition
    shell: |
      virt-install \
        --print-xml \
        --name {{ vm_hostname }} \
        --memory 2048 \
        --vcpus 1 \
        --network network=nuc-network \
        --disk path={{ vm_imagepath }}/{{ vm_hostname }}/{{ vm_hostname }}-seed.qcow2,device=cdrom \
        --disk {{ vm_imagepath }}/{{ vm_hostname }}/{{ vm_hostname }}.qcow2 \
        --import \
        --os-variant {{ os_variant }} \
        > {{ vm_imagepath }}/{{ vm_hostname }}/{{ vm_hostname }}.xml

  - name: Define the VM non-idempotently
    command: >
      virsh define "{{ vm_imagepath }}/{{ vm_hostname }}/{{ vm_hostname }}.xml"

#  - name: Define VM
#    community.libvirt.virt:
#      command: define
#        #xml: "{{ vm_imagepath }}/{{ vm_hostname }}/{{ vm_hostname }}.xml"
#        #xml: "{{ lookup('template', 'vm_template.xml.j2') }}"
#      xml: "{{ lookup('file', vm_imagepath+'/'+vm_hostname+'/'+vm_hostname+'.xml') }}"
  
  - name: Start VM
    community.libvirt.virt:
      name: "{{ vm_hostname }}"
      state: running
      autostart: no
